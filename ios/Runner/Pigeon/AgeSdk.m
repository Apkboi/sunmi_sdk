// Autogenerated from Pigeon (v22.5.0), do not edit directly.
// See also: https://pub.dev/packages/pigeon

#import "AgeSdk.h"

#if TARGET_OS_OSX
#import <FlutterMacOS/FlutterMacOS.h>
#else
#import <Flutter/Flutter.h>
#endif

#if !__has_feature(objc_arc)
#error File requires ARC to be enabled.
#endif

static NSArray<id> *wrapResult(id result, FlutterError *error) {
  if (error) {
    return @[
      error.code ?: [NSNull null], error.message ?: [NSNull null], error.details ?: [NSNull null]
    ];
  }
  return @[ result ?: [NSNull null] ];
}

static id GetNullableObjectAtIndex(NSArray<id> *array, NSInteger key) {
  id result = array[key];
  return (result == [NSNull null]) ? nil : result;
}

@interface AgeSdkPigeonCodecReader : FlutterStandardReader
@end
@implementation AgeSdkPigeonCodecReader
- (nullable id)readValueOfType:(UInt8)type {
  switch (type) {
    default:
      return [super readValueOfType:type];
  }
}
@end

@interface AgeSdkPigeonCodecWriter : FlutterStandardWriter
@end
@implementation AgeSdkPigeonCodecWriter
- (void)writeValue:(id)value {
  {
    [super writeValue:value];
  }
}
@end

@interface AgeSdkPigeonCodecReaderWriter : FlutterStandardReaderWriter
@end
@implementation AgeSdkPigeonCodecReaderWriter
- (FlutterStandardWriter *)writerWithData:(NSMutableData *)data {
  return [[AgeSdkPigeonCodecWriter alloc] initWithData:data];
}
- (FlutterStandardReader *)readerWithData:(NSData *)data {
  return [[AgeSdkPigeonCodecReader alloc] initWithData:data];
}
@end

NSObject<FlutterMessageCodec> *GetAgeSdkCodec(void) {
  static FlutterStandardMessageCodec *sSharedObject = nil;
  static dispatch_once_t sPred = 0;
  dispatch_once(&sPred, ^{
    AgeSdkPigeonCodecReaderWriter *readerWriter = [[AgeSdkPigeonCodecReaderWriter alloc] init];
    sSharedObject = [FlutterStandardMessageCodec codecWithReaderWriter:readerWriter];
  });
  return sSharedObject;
}
void SetUpAgeSdkApi(id<FlutterBinaryMessenger> binaryMessenger, NSObject<AgeSdkApi> *api) {
  SetUpAgeSdkApiWithSuffix(binaryMessenger, api, @"");
}

void SetUpAgeSdkApiWithSuffix(id<FlutterBinaryMessenger> binaryMessenger, NSObject<AgeSdkApi> *api, NSString *messageChannelSuffix) {
  messageChannelSuffix = messageChannelSuffix.length > 0 ? [NSString stringWithFormat: @".%@", messageChannelSuffix] : @"";
  {
    FlutterBasicMessageChannel *channel =
      [[FlutterBasicMessageChannel alloc]
        initWithName:[NSString stringWithFormat:@"%@%@", @"dev.flutter.pigeon.sunmi_sdk.AgeSdkApi.getAge", messageChannelSuffix]
        binaryMessenger:binaryMessenger
        codec:GetAgeSdkCodec()];
    if (api) {
      NSCAssert([api respondsToSelector:@selector(getAgeWithCompletion:)], @"AgeSdkApi api (%@) doesn't respond to @selector(getAgeWithCompletion:)", api);
      [channel setMessageHandler:^(id _Nullable message, FlutterReply callback) {
        [api getAgeWithCompletion:^(NSNumber *_Nullable output, FlutterError *_Nullable error) {
          callback(wrapResult(output, error));
        }];
      }];
    } else {
      [channel setMessageHandler:nil];
    }
  }
}
